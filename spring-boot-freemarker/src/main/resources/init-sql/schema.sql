SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for `t_user`
-- ----------------------------
DROP TABLE IF EXISTS `t_user`;
CREATE TABLE `t_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `account` varchar(32) DEFAULT NULL,
  `password` varchar(32) DEFAULT NULL,
  `name` varchar(32) DEFAULT NULL,
  `create_time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_user
-- ----------------------------
INSERT INTO `t_user` VALUES ('2', 'lance', 'e10adc3949ba59abbe56e057f20f883e', 'Lance', '2016-06-02 23:35:38');
INSERT INTO `t_user` VALUES ('1', 'admin', 'e10adc3949ba59abbe56e057f20f883e', 'Admin', '2016-06-01 23:35:17');


DROP TABLE IF EXISTS `t_news`;
CREATE TABLE `t_news` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(200) DEFAULT NULL,
  `summary` varchar(500) DEFAULT NULL,
  `author` varchar(30) DEFAULT NULL,
  `content` varchar(5000) DEFAULT NULL,
  `status` int(1) DEFAULT NULL,
  `create_time` datetime DEFAULT NULL,
  `update_time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

INSERT INTO `t_news` VALUES ('1', 'Gecco 1.2.0 发布，支持运行时抓取规则配置', 'Gecco的动态编程是新版本的核心功能，Gecco支持动态生成SpiderBean包括类，属性，注解。可以不需要预先定义SpiderBean即可完成抓取', 'Lucky', '<p style=\"color:#000000;font-family:&quot;font-size:14px;font-style:normal;font-weight:normal;text-align:left;text-indent:0px;background-color:#FFFFFF;\">\r\n	Gecco 1.2.0 发布了，该版本改进内容包括：\r\n</p>\r\n<p style=\"color:#000000;font-family:&quot;font-size:14px;font-style:normal;font-weight:normal;text-align:left;text-indent:0px;background-color:#FFFFFF;\">\r\n	1.HttpClientDownloader保证inputstream能重复使用，<a href=\"https://github.com/shangjian\">@shangjian</a>提供修改思路\r\n</p>\r\n<p style=\"color:#000000;font-family:&quot;font-size:14px;font-style:normal;font-weight:normal;text-align:left;text-indent:0px;background-color:#FFFFFF;\">\r\n	2.支持一个Before/AfterDownloader对应多个SpiderBean\r\n</p>\r\n<p style=\"color:#000000;font-family:&quot;font-size:14px;font-style:normal;font-weight:normal;text-align:left;text-indent:0px;background-color:#FFFFFF;\">\r\n	3.Gecco的动态编程是新版本的核心功能，Gecco支持动态生成SpiderBean包括类，属性，注解。可以不需要预先定义SpiderBean即可完成抓取。详细情况可以参考<a href=\"http://my.oschina.net/u/2336761/blog/706041\">http://my.oschina.net/u/2336761/blog/706041</a>\r\n</p>\r\n<p style=\"color:#000000;font-family:&quot;font-size:14px;font-style:normal;font-weight:normal;text-align:left;text-indent:0px;background-color:#FFFFFF;\">\r\n	<strong>通过动态特性，可以实现如下功能：</strong>\r\n</p>\r\n<ol class=\" list-paddingleft-2\" style=\"color:#000000;font-family:&quot;font-size:14px;font-style:normal;font-weight:normal;text-align:left;text-indent:0px;background-color:#FFFFFF;\">\r\n	<li>\r\n		<p>\r\n			已经定义了ORM（如：hiberante）的bean，将注解动态的加载到ORM的bean中，可以很方便的将页面格式化后入库\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			很多类似的网站的抓取，SpiderBean都一样，只是提取元素的cssPath不一样，为了不构建很多重复的SpiderBean，可以考虑动态生成SpiderBean\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			通过配置的方式抓取页面，通过后台管理系统、配置文件等配置抓取规则，动态的将配置规则转换成SpiderBean\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			利用动态SpiderBean可以构建可视化爬虫，利用可视化工具构建抓取规则，将规则动态转换为SpiderBean\r\n		</p>\r\n	</li>\r\n</ol>', '1', '2016-07-06 00:05:50', null);
INSERT INTO `t_news` VALUES ('2', '那些值得你试试的Android竞品分析工具', '本文整理了一些自己在开发过程中经常会用到的竞品分析工具，这些工具可以帮助分析竞品', 'Tom', '<h3 style=\"font-family:&quot;font-weight:500;color:#333333;font-size:24px;font-style:normal;text-align:justify;text-indent:0px;background-color:#FFFFFF;\">\r\n	前言\r\n</h3>\r\n<p style=\"color:#333333;font-family:&quot;font-size:16px;font-style:normal;font-weight:normal;text-align:justify;text-indent:0px;background-color:#FFFFFF;\">\r\n	本文整理了一些自己在开发过程中经常会用到的竞品分析工具，这些工具可以帮助分析竞品。让我们得以了解竞品相应的一些技术信息，例如：代码质量、某种业务的实现方式、用了什么第三方库等。除此之外，也有一些高端玩家会玩起 HOOK ，更有甚者是通过修改代码然后进行二次打包。当然这些损害开发者利益的事情，是不值得提倡的。但如果只是出于学习的目的，我是十分建议多折腾的。\r\n</p>\r\n<p style=\"color:#333333;font-family:&quot;font-size:16px;font-style:normal;font-weight:normal;text-align:justify;text-indent:0px;background-color:#FFFFFF;\">\r\n	<strong>提前声明：</strong>\r\n</p>\r\n<ul style=\"color:#333333;font-family:&quot;font-size:16px;font-style:normal;font-weight:normal;text-align:justify;text-indent:0px;background-color:#FFFFFF;\">\r\n	<li>\r\n		本文只对工具做简要功能介绍，要求面面俱到讲解每个工具使用，本人表示能力有限啊；\r\n	</li>\r\n	<li>\r\n		下文所介绍的工具，都会附上这些工具的官方地址以及相应的使用教程链接（如果有）；\r\n	</li>\r\n	<li>\r\n		有童鞋对下文提到的工具已经用得出神入化，欢迎写成文章，可以的话，也欢迎给个链接让我补充进本文，顺带学习一下；\r\n	</li>\r\n	<li>\r\n		本文所有提到的工具只做分析学习使用，请不要拿去做损害他人利益的事情；\r\n	</li>\r\n</ul>\r\n<h3 style=\"font-family:&quot;font-weight:500;color:#333333;font-size:24px;font-style:normal;text-align:justify;text-indent:0px;background-color:#FFFFFF;\">\r\n	Apk 内部结构\r\n</h3>\r\n<p style=\"color:#333333;font-family:&quot;font-size:16px;font-style:normal;font-weight:normal;text-align:justify;text-indent:0px;background-color:#FFFFFF;\">\r\n	为了方便介绍工具，需要先简单科普一下 Apk 的内部结构，已经很熟悉的童鞋可以忽略此章节。需要注意的是，这里介绍的 Apk 结构并不包含加固的情况，虽然很多厂家推出了加固服务用于对抗反编译，但是加固也有诸多的问题存在，另外基本上分析的大厂应用都没有发现有加固的，可能也是考虑到加固后安装包存在的诸多问题吧。\r\n</p>\r\n<p style=\"color:#333333;font-family:&quot;font-size:16px;font-style:normal;font-weight:normal;text-align:justify;text-indent:0px;background-color:#FFFFFF;\">\r\n	直接使用 Android Studio 创建一个 HelloWorld 的 Moudle，然后打个 release 的 Apk 安装包，并修改后缀 apk 为 zip 后进行解压，可以看到下面一个标准的结构：\r\n</p>\r\n<p style=\"color:#333333;font-family:&quot;font-size:16px;font-style:normal;font-weight:normal;text-align:justify;text-indent:0px;background-color:#FFFFFF;\">\r\n	<img src=\"http://img.blog.csdn.net/20160705104032699\" alt=\"\" title=\"\" style=\"border:0px;\" />\r\n</p>\r\n<ul style=\"color:#333333;font-family:&quot;font-size:16px;font-style:normal;font-weight:normal;text-align:justify;text-indent:0px;background-color:#FFFFFF;\">\r\n	<li>\r\n		META-INF： 存放签名文件签名信息的目录，用于系统签名校验；\r\n	</li>\r\n	<li>\r\n		res： 存放资源文件的目录，包含项目中的 xml 和 图片资源等；\r\n	</li>\r\n	<li>\r\n		AndroidManifest.xml： Android项目中的配置文件；\r\n	</li>\r\n	<li>\r\n		classes.dex： 由Java产生的字节码文件打包生成为虚拟机可以解读的字节码文件，所有的源码都在其中；\r\n	</li>\r\n	<li>\r\n		resources.arsc： 资源文件的ID索引表，如：layout、drawable、mipmap都会在R文件生成相应的ID资源；\r\n	</li>\r\n	<li>\r\n		其他目录：开发者自行添加的目录，如：存放资源的 asserts 、存放依赖包的 lib 目录等。\r\n	</li>\r\n</ul>\r\n<p style=\"color:#333333;font-family:&quot;font-size:16px;font-style:normal;font-weight:normal;text-align:justify;text-indent:0px;background-color:#FFFFFF;\">\r\n	上面介绍完了一个最基本的 Apk 解压后的目录结构，下面直接拿微信作为示例，看看大厂应用的结构是怎样的：\r\n</p>\r\n<p style=\"color:#333333;font-family:&quot;font-size:16px;font-style:normal;font-weight:normal;text-align:justify;text-indent:0px;background-color:#FFFFFF;\">\r\n	<img src=\"http://img.blog.csdn.net/20160705104257793\" alt=\"\" title=\"\" style=\"border:0px;\" />\r\n</p>\r\n<p style=\"color:#333333;font-family:&quot;font-size:16px;font-style:normal;font-weight:normal;text-align:justify;text-indent:0px;background-color:#FFFFFF;\">\r\n	我们可以看到微信除包含了上面提到的，还有 asserts、lib、r 这三个自行添加的目录，至于前两个目录是干嘛的上面已经提到，r 目录里面主要存放了一些 svg 和 xml 文件，有兴趣可以自行试试。如果要问为什么微信有3个dex文件的话，只能说它超了 Android 系统设定 65k 方法的限制，所以有多个dex包。\r\n</p>\r\n<p style=\"color:#333333;font-family:&quot;font-size:16px;font-style:normal;font-weight:normal;text-align:justify;text-indent:0px;background-color:#FFFFFF;\">\r\n	OK，关于 Apk 的目录结构介绍基本到此，这有助于我们去理解下面即将要介绍的工具！\r\n</p>\r\n<h3 style=\"font-family:&quot;font-weight:500;color:#333333;font-size:24px;font-style:normal;text-align:justify;text-indent:0px;background-color:#FFFFFF;\">\r\n	Apktool\r\n</h3>', '1', '2016-07-06 00:08:37', null);
